// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ROLES {
  User
  Admin
}

model User {
  id             Int            @id @default(autoincrement())
  username       String
  password       String
  role           ROLES          @default(User)
  Post           Post[]
  Comment        Comment[]
  conversationsA Conversation[] @relation("ConversationsA")
  conversationsB Conversation[] @relation("ConversationsB")
  Message        Message[]
}

model Post {
  id          Int       @id @default(autoincrement())
  title       String
  description String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  User        User      @relation(fields: [user_id], references: [id])
  user_id     Int
  Likes       Int[]
  Comments    Comment[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  body      String
  createdAt DateTime @default(now())
  Post      Post?    @relation(fields: [post_id], references: [id])
  post_id   Int?
  User      User?    @relation(fields: [user_id], references: [id])
  user_id   Int
}

model Conversation {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userA   User @relation("ConversationsA", fields: [userIdA], references: [id])
  userIdA Int
  userB   User @relation("ConversationsB", fields: [userIdB], references: [id])
  userIdB Int

  messages Message[]
}

model Message {
  id             Int          @id @default(autoincrement())
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  content        String
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  conversationId Int
  user           User         @relation(fields: [userId], references: [id])
  userId         Int
}
